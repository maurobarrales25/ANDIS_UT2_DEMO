services:
  # API GATEWAY (punto de entrada)
  api-gateway:
    build: ./api-gateway
    container_name: api-gateway
    ports:
      - "${GATEWAY_PORT}:80"
    depends_on:
      - artist-api
      - user-api
      - playlist-api

  # API DE ARTISTAS
  artist-api:
    build: ./ArtistAPI
    container_name: artist-api
    ports:
      - "${ARTIST_API_PORT}:8080"
    env_file:
      - ./ArtistAPI/.env
    depends_on:
      - artist-db

  artist-db:
    image: mysql:8.0
    container_name: artist-db
    env_file:
      - ./ArtistAPI/.env
    volumes:
      - artist-db-data:/var/lib/mysql
    ports:
      - "${MYSQL_PORT}:3306"

  # API DE USUARIOS
  user-api:
    build: ./UserAPI
    container_name: user-api
    ports:
      - "${USERS_API_PORT}:8000"
    env_file:
      - ./UserAPI/.env
    depends_on:
      - user-db
      - keycloak

  user-db:
    image: postgres:17
    container_name: user-db
    env_file:
      - ./UserAPI/.env
    volumes:
      - user-db-data:/var/lib/postgresql/data
      - ./UserAPI/pginit:/docker-entrypoint-initdb.d
      - ./UserAPI/app:/app
    ports:
      - "${POSTGRES_PORT}:5432"

  keycloak:
    image: quay.io/keycloak/keycloak:26.3.0
    command: start-dev
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    ports:
      - "8081:8080"
    volumes:
      - ./keycloak_data:/opt/keycloak/data/h2

  # API DE PLAYLISTS
  playlist-api:
    build:
      context: ./PlaylistAPI
      dockerfile: Dockerfile
    container_name: playlist-api
    restart: always
    ports:
      - "${PLAYLIST_API_PORT}:8080"
    depends_on: [mongo]
    env_file:
      - ./.env
    volumes:
      - ./PlaylistAPI/app:/app

  mongo:
    image: mongo:latest
    container_name: mongodb
    restart: always
    ports:
      - "${MONGO_PORT}:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
    volumes:
      - mongo_data:/data/db

volumes:
  artist-db-data:
  user-db-data:
  mongo_data:
